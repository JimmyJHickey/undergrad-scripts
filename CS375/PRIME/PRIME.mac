;23456789012345678901234567890123
START:	CLR	PRCNT		;SET PRCNT TO 0
	MOV	#2,COUNT	;SET COUNT TO 2
	MOV	#1,NUM		;SET NUM TO 1
	CMP	N,#1		;CHECK IF N>0
	BMI	ERROR		;BRANCH IF N<1
	BR	LOOP1		;GO TO LOOPS

INCR:	INC	PRCNT		;INCREMENT PRIME COUNTER	
LOOP1:	
		
	CMP 	N,PRCNT		;CHECK IF YOU HAVE N PRIMES
	BEQ	FIN		;END IF YOU DO
	INC	NUM		;INCREASE NUM BEING CHECKED
	MOV	#2,COUNT	;START COUNT FOR LOOP2 AT 2
LOOP2:	
	CMP	COUNT,NUM	;CHECK IF NUM=COUNT
				;THIS WOULD MEAN THAT IT IS
				;ONLY DIVISIBLE BY ITSELF
				;AND ONE
	BEQ 	INCR		;GO TO INCR IF COUNT=NUM
	MOV 	NUM,R0		;MAKE NUM DOUBLE
	MOV	R0,R1		;PRECISION
	SXT	R0		;SO REMAINDER CAN BE CHECKED
	DIV	COUNT,R0	;NUM/COUNT
	TST	R1		;CHECK REMAINDER
	BEQ	LOOP1		;IF REMAINDER IS 0, BRANCH
	INC	COUNT		;INCREMENT DIVISOR
	BVS	ERROR		;CHECK FOR OVERFLOW
	BR	LOOP2		;LOOP AGAIN


ERROR:	MOV	#100000,PRIME	;OUTPUT ERROR
	BR	DONE		;BRANCH TO DONE
FIN:	MOV	NUM,PRIME	;PUT HIGHEST PRIME IN PRIME
DONE:	HALT			

COUNT:	.BLKW	1		;COUNTER FOR LOOP 2
NUM:	.BLKW	1		;NUMBER BEING CHECKED
PRCNT:	.BLKW	1		;PRIME COUNTER
N:	.BLKW	1		;Input 2s comp >0
PRIME:	.BLKW	1		;Output 2s comp>0
				;-32768 for error,